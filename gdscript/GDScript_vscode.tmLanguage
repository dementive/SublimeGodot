<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>gd</string>
	</array>
	<key>name</key>
	<string>GDScript (VSCode)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#statement</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#expression</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>annotated_parameter</key>
		<dict>
			<key>begin</key>
			<string>(?x)\s* ([a-zA-Z_]\w*) \s* (:)\s* ([a-zA-Z_]\w*)?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.language.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.annotation.gdscript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(,)|(?=\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.gdscript</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=(?!=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.gdscript</string>
				</dict>
			</array>
		</dict>
		<key>annotations</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.decorator.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.decorator.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(@)(export|export_group|export_color_no_alpha|export_custom|export_dir|export_enum|export_exp_easing|export_file|export_flags|export_flags_2d_navigation|export_flags_2d_physics|export_flags_2d_render|export_flags_3d_navigation|export_flags_3d_physics|export_flags_3d_render|export_global_dir|export_global_file|export_multiline|export_node_path|export_placeholder|export_range|export_storage|icon|onready|rpc|tool|warning_ignore|static_unload)\b</string>
		</dict>
		<key>any_method</key>
		<dict>
			<key>match</key>
			<string>\b([A-Za-z_]\w*)\b(?=\s*(?:[(]))</string>
			<key>name</key>
			<string>entity.name.function.other.gdscript</string>
		</dict>
		<key>any_property</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.accessor.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.gdscript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.other.property.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(\.)\s*(?&lt;![@\$#%])(?:([A-Z_][A-Z_0-9]*)|([A-Za-z_]\w*))\b(?![(])</string>
		</dict>
		<key>any_variable</key>
		<dict>
			<key>match</key>
			<string>\b(?&lt;![@\$#%])([A-Za-z_]\w*)\b(?![(])</string>
			<key>name</key>
			<string>variable.other.gdscript</string>
		</dict>
		<key>arithmetic_operator</key>
		<dict>
			<key>match</key>
			<string>-&gt;|\+=|-=|\*=|\^=|/=|%=|&amp;=|~=|\|=|\*\*|\*|/|%|\+|-</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.gdscript</string>
		</dict>
		<key>assignment_operator</key>
		<dict>
			<key>match</key>
			<string>=</string>
			<key>name</key>
			<string>keyword.operator.assignment.gdscript</string>
		</dict>
		<key>base_expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin_get_node_shorthand</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nodepath_object</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nodepath_function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_classes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#const_vars</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#lambda_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#signal_declaration_bare</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#signal_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement_keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#assignment_operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#in_keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#control_flow</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#match_keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#curly_braces</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#square_braces</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#round_braces</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function_call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#self</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#letter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#pascal_case_class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_continuation</string>
				</dict>
			</array>
		</dict>
		<key>bitwise_operator</key>
		<dict>
			<key>match</key>
			<string>&amp;|\||&lt;&lt;=|&gt;&gt;=|&lt;&lt;|&gt;&gt;|\^|~</string>
			<key>name</key>
			<string>keyword.operator.bitwise.gdscript</string>
		</dict>
		<key>boolean_operator</key>
		<dict>
			<key>match</key>
			<string>(&amp;&amp;|\|\|)</string>
			<key>name</key>
			<string>keyword.operator.boolean.gdscript</string>
		</dict>
		<key>builtin_classes</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![^.]\.|:)\b(Vector2|Vector2i|Vector3|Vector3i|Vector4|Vector4i|Color|Rect2|Rect2i|Array|Basis|Dictionary|Plane|Quat|RID|Rect3|Transform|Transform2D|Transform3D|AABB|String|Color|NodePath|PoolByteArray|PoolIntArray|PoolRealArray|PoolStringArray|PoolVector2Array|PoolVector3Array|PoolColorArray|bool|int|float|Signal|Callable|StringName|Quaternion|Projection|PackedByteArray|PackedInt32Array|PackedInt64Array|PackedFloat32Array|PackedFloat64Array|PackedStringArray|PackedVector2Array|PackedVector2iArray|PackedVector3Array|PackedVector3iArray|PackedVector4Array|PackedColorArray|super)\b</string>
			<key>name</key>
			<string>entity.name.type.class.builtin.gdscript</string>
		</dict>
		<key>builtin_get_node_shorthand</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin_get_node_shorthand_quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_get_node_shorthand_bare</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_get_node_shorthand_bare_multi</string>
				</dict>
			</array>
		</dict>
		<key>builtin_get_node_shorthand_bare</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.flow.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.gdscript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.gdscript</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.gdscript</string>
				</dict>
			</dict>
		</dict>
		<key>builtin_get_node_shorthand_bare_multi</key>
		<dict>
			<key>begin</key>
			<string>(\$\s*|%|\$%\s*)(/\s*)?([a-zA-Z_]\w*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.flow.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.gdscript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\s*/\s*%?\s*[a-zA-Z_]\w*)</string>
			<key>name</key>
			<string>meta.literal.nodepath.bare.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.gdscript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.gdscript</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(/)\s*(%)?\s*([a-zA-Z_]\w*)\s*</string>
				</dict>
			</array>
		</dict>
		<key>builtin_get_node_shorthand_quoted</key>
		<dict>
			<key>begin</key>
			<string>(?:(\$|%)|(&amp;|\^|@))("|')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.flow.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.enummember.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\3)</string>
			<key>name</key>
			<string>string.quoted.gdscript meta.literal.nodepath.gdscript constant.character.escape.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>keyword.control.flow</string>
				</dict>
			</array>
		</dict>
		<key>class_declaration</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>class.other.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=^class)\s+([a-zA-Z_]\w*)\s*(?=:)</string>
		</dict>
		<key>class_enum</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.enummember.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([A-Z][a-zA-Z_0-9]*)\.([A-Z_0-9]+)</string>
		</dict>
		<key>class_is</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.is.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s+(is)\s+([a-zA-Z_]\w*)</string>
		</dict>
		<key>class_name</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>class.other.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=class_name)\s+([a-zA-Z_]\w*(\.([a-zA-Z_]\w*))?)</string>
		</dict>
		<key>class_new</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.new.gdscript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.begin.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([a-zA-Z_]\w*).(new)\(</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.number-sign.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(##|#).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.gdscript</string>
		</dict>
		<key>compare_operator</key>
		<dict>
			<key>match</key>
			<string>&lt;=|&gt;=|==|&lt;|&gt;|!=|!</string>
			<key>name</key>
			<string>keyword.operator.comparison.gdscript</string>
		</dict>
		<key>const_vars</key>
		<dict>
			<key>match</key>
			<string>\b([A-Z_][A-Z_0-9]*)\b</string>
			<key>name</key>
			<string>variable.other.constant.gdscript</string>
		</dict>
		<key>control_flow</key>
		<dict>
			<key>match</key>
			<string>\b(?:if|elif|else|while|break|continue|pass|return|when|yield|await)\b</string>
			<key>name</key>
			<string>keyword.control.gdscript</string>
		</dict>
		<key>curly_braces</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dict.begin.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dict.end.gdscript</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_variable</string>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#getter_setter_godot4</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#assignment_operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotations</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class_name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_classes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class_new</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class_is</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class_enum</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_method</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_property</string>
				</dict>
			</array>
		</dict>
		<key>extends_statement</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(extends)\s+([a-zA-Z_]\w*\.[a-zA-Z_]\w*)?</string>
		</dict>
		<key>func</key>
		<dict>
			<key>match</key>
			<string>\bfunc\b</string>
			<key>name</key>
			<string>keyword.language.gdscript</string>
		</dict>
		<key>function_arguments</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.gdscript</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function.parameters.gdscript</string>
			<key>end</key>
			<string>(?=\))(?!\)\s*\()</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>punctuation.separator.arguments.gdscript</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function-call.gdscript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z_]\w*)\s*(=)(?!=)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=(?!=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.gdscript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.end.gdscript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*(\))\s*(\()</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#letter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_property</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
			</array>
		</dict>
		<key>function_call</key>
		<dict>
			<key>begin</key>
			<string>(?=\b[a-zA-Z_]\w*\b\()</string>
			<key>comment</key>
			<string>Regular function call of the type "name(args)"</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.gdscript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function_name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function_arguments</string>
				</dict>
			</array>
		</dict>
		<key>function_declaration</key>
		<dict>
			<key>begin</key>
			<string>(?x) \s*(func) \s+([a-zA-Z_]\w*) \s*(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.gdscript storage.type.function.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(:)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.begin.gdscript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_continuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
			</array>
		</dict>
		<key>function_name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin_classes</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(preload)\b</string>
					<key>name</key>
					<string>keyword.language.gdscript</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Some color schemas support meta.function-call.generic scope</string>
					<key>match</key>
					<string>\b([a-zA-Z_]\w*)\b</string>
					<key>name</key>
					<string>entity.name.function.gdscript</string>
				</dict>
			</array>
		</dict>
		<key>getter_setter_godot4</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(get):</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x) \s+(set) \s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.gdscript</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(:|(?=[#'"\n]))</string>
					<key>name</key>
					<string>meta.function.gdscript</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line_continuation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>in_keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(for)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.gdscript</string>
						</dict>
					</dict>
					<key>end</key>
					<string>:</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\bin\b</string>
							<key>name</key>
							<string>keyword.control.gdscript</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#base_expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#any_property</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\bin\b</string>
					<key>name</key>
					<string>keyword.operator.wordlike.gdscript</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>match</key>
			<string>\b(?:class|class_name|abstract|is|onready|tool|static|export|as|void|enum|assert|breakpoint|sync|remote|master|puppet|slave|remotesync|mastersync|puppetsync|trait|namespace)\b</string>
			<key>name</key>
			<string>keyword.language.gdscript</string>
		</dict>
		<key>lambda_declaration</key>
		<dict>
			<key>begin</key>
			<string>(func)\s?(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.gdscript storage.type.function.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(:|(?=[#'"\n]))</string>
			<key>end2</key>
			<string>(\s*(\-\&gt;)\s*(void\w*)|([a-zA-Z_]\w*)\s*\:)</string>
			<key>endCaptures2</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.annotation.result.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.language.void.gdscript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.gdscript markup.italic</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_continuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_property</string>
				</dict>
			</array>
		</dict>
		<key>letter</key>
		<dict>
			<key>match</key>
			<string>\b(?:true|false|null)\b</string>
			<key>name</key>
			<string>constant.language.gdscript</string>
		</dict>
		<key>line_continuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.continuation.line.gdscript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.line.continuation.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\\)\s*(\S.*$\n?)</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\\)\s*$\n?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.continuation.line.gdscript</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?x)(?=^\s*$)|(?! (\s* [rR]? (\'\'\'|\"\"\"|\'|\"))|(\G $)  (?# '\G' is necessary for ST))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#base_expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>loose_default</key>
		<dict>
			<key>begin</key>
			<string>(=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(,)|(?=\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.gdscript</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
			</array>
		</dict>
		<key>match_keyword</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(match)</string>
		</dict>
		<key>nodepath_function</key>
		<dict>
			<key>begin</key>
			<string>(get_node_or_null|has_node|has_node_and_resource|find_node|get_node)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.gdscript</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function.parameters.gdscript</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.gdscript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>("|')</string>
					<key>end</key>
					<string>\1</string>
					<key>name</key>
					<string>string.quoted.gdscript meta.literal.nodepath.gdscript constant.character.escape</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>%</string>
							<key>name</key>
							<string>keyword.control.flow</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
			</array>
		</dict>
		<key>nodepath_object</key>
		<dict>
			<key>begin</key>
			<string>(NodePath)\s*(?:\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.class.library.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?:\))</string>
			<key>name</key>
			<string>meta.literal.nodepath.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>("|')</string>
					<key>end</key>
					<string>\1</string>
					<key>name</key>
					<string>string.quoted.gdscript constant.character.escape.gdscript</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>%</string>
							<key>name</key>
							<string>keyword.control.flow.gdscript</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>0b[01_]+</string>
					<key>name</key>
					<string>constant.numeric.integer.binary.gdscript</string>
				</dict>
				<dict>
					<key>match</key>
					<string>0x[0-9A-Fa-f_]+</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.gdscript</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.[0-9][0-9_]*([eE][+-]?[0-9_]+)?</string>
					<key>name</key>
					<string>constant.numeric.float.gdscript</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([0-9][0-9_]*)?\.[0-9_]*([eE][+-]?[0-9_]+)?</string>
					<key>name</key>
					<string>constant.numeric.float.gdscript</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[0-9][0-9_]*[eE][+-]?[0-9_]+</string>
					<key>name</key>
					<string>constant.numeric.float.gdscript</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[-]?[0-9][0-9_]*</string>
					<key>name</key>
					<string>constant.numeric.integer.gdscript</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#wordlike_operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#boolean_operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arithmetic_operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bitwise_operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#compare_operator</string>
				</dict>
			</array>
		</dict>
		<key>parameters</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.gdscript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.parameters.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#annotated_parameter</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.language.gdscript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.parameters.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)([a-zA-Z_]\w*)\s* (?: (,) | (?=[)#\n=]))</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#loose_default</string>
				</dict>
			</array>
		</dict>
		<key>pascal_case_class</key>
		<dict>
			<key>match</key>
			<string>\b([A-Z]+[a-z_0-9]*([A-Z]?[a-z_0-9]+)*[A-Z]?)\b</string>
			<key>name</key>
			<string>entity.name.type.class.gdscript</string>
		</dict>
		<key>round_braces</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.begin.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.end.gdscript</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_variable</string>
				</dict>
			</array>
		</dict>
		<key>self</key>
		<dict>
			<key>match</key>
			<string>\bself\b</string>
			<key>name</key>
			<string>variable.language.gdscript</string>
		</dict>
		<key>signal_declaration</key>
		<dict>
			<key>begin</key>
			<string>(?x) \s*(signal) \s+([a-zA-Z_]\w*) \s*(?=\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.gdscript storage.type.function.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>((?=[#'"\n]))</string>
			<key>name</key>
			<string>meta.signal.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_continuation</string>
				</dict>
			</array>
		</dict>
		<key>signal_declaration_bare</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.gdscript storage.type.function.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x) \s*(signal) \s+([a-zA-Z_]\w*)(?=[\n\s])</string>
			<key>name</key>
			<string>meta.signal.gdscript</string>
		</dict>
		<key>square_braces</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.gdscript</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#base_expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_variable</string>
				</dict>
			</array>
		</dict>
		<key>statement</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#extends_statement</string>
				</dict>
			</array>
		</dict>
		<key>statement_keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x) \b(?&lt;!\.)(continue | assert | break | elif | else | if | pass | return | while )\b</string>
					<key>name</key>
					<string>keyword.control.flow.gdscript</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)(class)\b</string>
					<key>name</key>
					<string>storage.type.class.gdscript</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)^\s*(case | match)(?=\s*([-+\w\d(\[{'":#]|$))\b</string>
				</dict>
			</array>
		</dict>
		<key>string_bracket_placeholders</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.format.placeholder.other.gdscript</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.format.gdscript</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.format.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)({{ | }}| (?:{\w* (\.[[:alpha:]_]\w* | \[[^\]'"]+\])*(![rsa])?( : \w? [&lt;&gt;=^]? [-+ ]? \#?\d* ,? (\.\d+)? [bcdeEfFgGnosxX%]? )?}))</string>
					<key>name</key>
					<string>meta.format.brace.gdscript</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.format.placeholder.other.gdscript</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.format.gdscript</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.format.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)({\w* (\.[[:alpha:]_]\w* | \[[^\]'"]+\])*(![rsa])?(:)[^'"{}\n]* (?:\{ [^'"}\n]*? \} [^'"{}\n]*)*})</string>
					<key>name</key>
					<string>meta.format.brace.gdscript</string>
				</dict>
			</array>
		</dict>
		<key>string_percent_placeholders</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.format.placeholder.other.gdscript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)(% (\([\w\s]*\))?[-+#0 ]*(\d+|\*)? (\.(\d+|\*))?([hlL])?[diouxXeEfFgGcrsab%])</string>
			<key>name</key>
			<string>meta.format.percent.gdscript</string>
		</dict>
		<key>strings</key>
		<dict>
			<key>begin</key>
			<string>(r)?("""|'''|"|')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\2</string>
			<key>name</key>
			<string>string.quoted.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.gdscript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_percent_placeholders</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_bracket_placeholders</string>
				</dict>
			</array>
		</dict>
		<key>variable_declaration</key>
		<dict>
			<key>begin</key>
			<string>\b(?:(var)|(const))\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.language.gdscript storage.type.var.gdscript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.language.gdscript storage.type.const.gdscript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$|;</string>
			<key>name</key>
			<string>meta.variable.declaration.gdscript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.annotation.gdscript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.language.gdscript storage.type.const.gdscript</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:)?\s*(set|get)\s+=\s+([a-zA-Z_]\w*)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>:=|=(?!=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.gdscript</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.annotation.gdscript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:)\s*([a-zA-Z_]\w*)?</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.language.gdscript storage.type.const.gdscript</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.gdscript</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.gdscript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(setget)\s+([a-zA-Z_]\w*)(?:[,]\s*([a-zA-Z_]\w*))?</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#letter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#any_property</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
			</array>
		</dict>
		<key>wordlike_operator</key>
		<dict>
			<key>match</key>
			<string>\b(and|or|not)\b</string>
			<key>name</key>
			<string>keyword.operator.wordlike.gdscript</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.gdscript</string>
</dict>
</plist>
